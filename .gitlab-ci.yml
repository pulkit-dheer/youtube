stages:
  - npm
  - sonar
  - trivy
  - docker 
  - imgscan
  - run-container

.install_dependency:
  stage: npm
  image:
    name: node:16
  script:
  - npm install 


.sonarqube_check:
  stage: sonar
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main


.trivy_file_scan:
  stage: trivy
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
  - trivy fs . 

.docker_build_and_push:
  stage: docker
  image:
    name: docker:latest
  services:
    - docker:dind
  script:
  - docker build --build-arg REACT_APP_RAPID_API_KEY=KJwZZIJSFimshuivMSVGaiYzkRomp15f2vKjsnK4bKzuUzVLzA -t youtubev1 .
  - docker tag youtubev1 pulkitdheer/youtubev1:latest
  - docker login -u $DOCKER_USER_YOUTUBE -p $DOCKER_PASSWORD_YOUTUBE
  - docker push pulkitdheer/youtubev1:latest


.scan_image:
  stage: imgscan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
  - trivy image pulkitdheer/youtubev1:latest

deploy: 
  stage: run-container
  tags:
    - github-runner
  script:
  - docker run -d --name youtube -p 3000:3000 pulkitdheer/youtubev1:latest 